<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PKI/CA与数字证书 on Razeen`s Blog</title><link>https://razeencheng.com/categories/pki/ca%E4%B8%8E%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6/</link><description>Recent content in PKI/CA与数字证书 on Razeen`s Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><atom:link href="https://razeencheng.com/categories/pki/ca%E4%B8%8E%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6/index.xml" rel="self" type="application/rss+xml"/><item><title>TLS 1.3 详解 (RFC 8446解读)</title><link>https://razeencheng.com/posts/detail-of-tls13/</link><pubDate>Mon, 20 Aug 2018 23:32:52 +0000</pubDate><guid>https://razeencheng.com/posts/detail-of-tls13/</guid><description>&lt;p>10 Aug 2018 by &lt;a href="https://blog.cloudflare.com/author/nick-sullivan/">Nick Sullivan&lt;/a>.&lt;/p>
&lt;p>在过去的五年中，IETF（Internet Engineering Task Force，定义互联网协议的标准机构）一直致力于标准化其最重要的安全协议之一，TLS协议的最新版本。TLS用于保护Web（远不止Web），提供加密并确保每个HTTPS网站和API的真实性。&lt;/p></description></item><item><title>简单了解 PKCS 规范</title><link>https://razeencheng.com/posts/introduce-pkcs/</link><pubDate>Wed, 09 May 2018 07:21:49 +0000</pubDate><guid>https://razeencheng.com/posts/introduce-pkcs/</guid><description>&lt;p>接触过密码学的童鞋可能都听说或接触过PKCS #1, PKCS #7, PKCS #8, PKCS #12等等，或许你早已了解PKCS就是指公钥密码标准(Public Key Cryptography Standards)，而这篇博客将带你系统的了解一下整个PKCS规范。&lt;/p></description></item><item><title>TLS1.3正式更新，为Nginx添加TLS1.3的支持</title><link>https://razeencheng.com/posts/nginx-tls1.3-draft26/</link><pubDate>Mon, 16 Apr 2018 02:18:57 +0000</pubDate><guid>https://razeencheng.com/posts/nginx-tls1.3-draft26/</guid><description>&lt;h3 id="关于tls13">关于TLS1.3&lt;/h3>
&lt;p>在&lt;a href="https://github.com/openssl/openssl/tree/OpenSSL_1_1_1">OpenSSL的github开源项目&lt;/a>中我们可以看到最新的tag为&lt;code>OpenSSL_1_1_1&lt;/code>,该版本为&lt;a href="https://github.com/openssl/openssl/blob/OpenSSL_1_1_1/include/openssl/tls1.h#L30">TLS1.3正式版&lt;/a>。&lt;/p>
&lt;blockquote>
&lt;p>更新：2018/09/12 昨天前OpenSSL_1_1_1发布了，已更新。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>更多TLS v1.3内容看&lt;a href="https://razeen.me/post/detail-of-tls13.html">这里&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>nginx 更新到v1.15.8&lt;/p>
&lt;/blockquote>
&lt;p>从&lt;a href="https://www.openssl.org/blog/blog/2017/05/04/tlsv1.3/">OpenSSL的博客&lt;/a>中，我们知道TLS1.3与1TLS1.2的主要差异有以下几点：&lt;/p></description></item><item><title>证书透明度是什么？它是怎么工作的？</title><link>https://razeencheng.com/posts/what-ct-is-and-how-it-works/</link><pubDate>Thu, 22 Mar 2018 16:46:00 +0000</pubDate><guid>https://razeencheng.com/posts/what-ct-is-and-how-it-works/</guid><description>&lt;p>证书透明度致力于通过可审计的HTTPS提高互联网安全.&lt;/p>
&lt;p>用一句话来说，证书透明度就是为HTTPS提供一个可审计，可追究责任的一种提高互联网安全的机制。&lt;/p></description></item><item><title>搭建证书透明度(certificate-transparency)日志服务之从入门到放弃</title><link>https://razeencheng.com/posts/ssl-build-certificate-transparency/</link><pubDate>Sun, 14 Jan 2018 01:18:00 +0000</pubDate><guid>https://razeencheng.com/posts/ssl-build-certificate-transparency/</guid><description>&lt;p>最近在搭建证书透明度日志服务，折腾了几天，最后结果是 “测试完美通关，部署各种出错&amp;quot;。So, 先暂停一段时间，写篇博客记录一下这几天傻傻折腾的过程。&lt;/p>
&lt;p>&lt;em>注&lt;/em> 后面&lt;code>certificate-transparency&lt;/code> 简写为CT。&lt;/p></description></item><item><title>HTTPS篇之SSL握手过程详解</title><link>https://razeencheng.com/posts/ssl-handshake-detail/</link><pubDate>Sun, 31 Dec 2017 23:59:11 +0000</pubDate><guid>https://razeencheng.com/posts/ssl-handshake-detail/</guid><description>&lt;p>​接触HTTPS也有一段时间了，对整个SSL握手的过程零零碎碎的了解了一些，趁着这篇文字系统的总结一下整个SSL握手的过程，结合Wireshark工具让自己更深刻的理解SSL通信过程。&lt;/p></description></item><item><title>数字证书分类及怎么区分各类数字证书</title><link>https://razeencheng.com/posts/ssl-category/</link><pubDate>Mon, 06 Nov 2017 00:29:00 +0000</pubDate><guid>https://razeencheng.com/posts/ssl-category/</guid><description>&lt;p>在刚开始接触数字证书的时候，我们经常会听到“服务器证书”，“客户端证书”，“邮件证书”等等相关的数字证书名字，这就是数字证书的一种按照用途分类的分类方式。那么数字证书到底有多少类？又是怎么去区分的呢？&lt;/p></description></item></channel></rss>