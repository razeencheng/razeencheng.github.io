<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go基础 on Razeen`s Blog</title><link>https://razeencheng.com/categories/go%E5%9F%BA%E7%A1%80/</link><description>Recent content in Go基础 on Razeen`s Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 30 May 2019 21:06:43 +0000</lastBuildDate><atom:link href="https://razeencheng.com/categories/go%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml"/><item><title>Go学习笔记(八) | 使用 os/exec 执行命令</title><link>https://razeencheng.com/posts/simple-use-go-exec-command/</link><pubDate>Thu, 30 May 2019 21:06:43 +0000</pubDate><guid>https://razeencheng.com/posts/simple-use-go-exec-command/</guid><description>用Go去调用一些外部的命令其实很愉快的，这遍文章就总结一下我自己日常用的比较多的几种方法。 关于Unix标准输入输出 在具体聊os/exec的使</description></item><item><title>Go学习笔记(三) | 怎么写Go基准测试（性能测试）</title><link>https://razeencheng.com/posts/go-how-to-write-benchmark/</link><pubDate>Wed, 25 Apr 2018 01:04:50 +0000</pubDate><guid>https://razeencheng.com/posts/go-how-to-write-benchmark/</guid><description>&lt;p>或许你经常会思考这样的问题，我用不同的方法实现了同样的效果，哪个会更快？哪个内存消耗更小？这时候你一个简单的基准测试就能解决你的疑惑。&lt;/p></description></item><item><title>Go学习笔记(二) | 我对 recover 的一点误解</title><link>https://razeencheng.com/posts/daily-go-recover/</link><pubDate>Sun, 21 Jan 2018 22:19:30 +0000</pubDate><guid>https://razeencheng.com/posts/daily-go-recover/</guid><description>&lt;p>在golang的官方介绍中是这么介绍&lt;strong>Recover&lt;/strong>函数的。&lt;/p></description></item><item><title>Go学习笔记(一) | postgres与golang点点滴滴</title><link>https://razeencheng.com/posts/daily-pg-tips/</link><pubDate>Mon, 27 Nov 2017 00:07:00 +0000</pubDate><guid>https://razeencheng.com/posts/daily-pg-tips/</guid><description>&lt;p>在golang中使用数据库主要依赖&lt;code>database/sql&lt;/code>库以及pg的驱动库。而目前我们常用的pg的驱动库是 &lt;code>github.com/lib/pq&lt;/code>。这里我想说的不是如何去使用它们，毕竟人家文档已经很详细了，这里主要总结了一下自己日常使用中学到的一些技巧。&lt;/p></description></item><item><title>Gin文件上传与下载</title><link>https://razeencheng.com/posts/gin-file-down-upload/</link><pubDate>Sun, 12 Mar 2017 13:06:52 +0000</pubDate><guid>https://razeencheng.com/posts/gin-file-down-upload/</guid><description>&lt;p>Gin是用Go编写的web框架。性能还不错，而且使用比较简单，还支持RESTful API。&lt;/p>
&lt;p>日常的使用中我们可能要处理一些文件的上传与下载，我这里简单总结一下。&lt;/p></description></item></channel></rss>