<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git-hook on Razeen`s Blog</title><link>https://razeencheng.com/tags/git-hook/</link><description>Recent content in git-hook on Razeen`s Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 13 Apr 2020 07:08:37 +0000</lastBuildDate><atom:link href="https://razeencheng.com/tags/git-hook/index.xml" rel="self" type="application/rss+xml"/><item><title>利用 git hook 规范你的代码与 commit message</title><link>https://razeencheng.com/posts/golang-and-git-commit-message-pre-commit/</link><pubDate>Mon, 13 Apr 2020 07:08:37 +0000</pubDate><guid>https://razeencheng.com/posts/golang-and-git-commit-message-pre-commit/</guid><description>&lt;p>在团队协作时，由于个人编码习惯的差异，导致代码格式，风格都会有所不同，这就给代码审核带来一定的困难，更严重的是会导致整体的代码质量不可控。这时，我们有必要借助一些工具来约束我们的代码格式。在Go中，我们经常使用的工具有：&lt;/p>
&lt;ul>
&lt;li>&lt;code>goimports&lt;/code>: 自动导包；&lt;/li>
&lt;li>&lt;code>gofmt&lt;/code> : 格式化我们的代码；&lt;/li>
&lt;li>&lt;code>golint&lt;/code>: 检查代码命名，注释等；&lt;/li>
&lt;li>&lt;code>go vet&lt;/code>: 静态错误检查。&lt;/li>
&lt;/ul>
&lt;p>那么，我们可以利用这些工具来规范团队的代码风格。但如果每次手动执行这些命令，或者仅仅依靠IDE去检查，这是不靠谱的，因为人的行为本身是不靠谱的==。&lt;/p>
&lt;p>于是，我们可以结合&lt;code>git hook&lt;/code>, 强制执行这些检查，检查不通过，代码都无法提交，从而达到强一致性。&lt;/p>
&lt;p>同时，结合上一篇&lt;a href="https://razeencheng.com/post/conventional-commits-and-standard-version.html">&amp;laquo;规范git commit message与自动化版本控制&amp;raquo;&lt;/a>, 这里我们介绍一下利用pre-commit 约束commit-msg来约束我们的代码与git commit message。&lt;/p></description></item><item><title>云服务器搭建 hexo 博客，git hooks自动更新</title><link>https://razeencheng.com/posts/daily-hexo-auto-refresh/</link><pubDate>Thu, 28 Sep 2017 18:11:00 +0000</pubDate><guid>https://razeencheng.com/posts/daily-hexo-auto-refresh/</guid><description>&lt;p>因为自己喜欢瞎拍一些东西，希望弄个博客记录记录，原以为就在eiblog的基础上添加相册栏目，自定义一些东西，但自己的前端知识几乎为0，行动起来，需要点时间。看到hexo上有很多适合的主题，决定用hexo搭建一个，通过git hooks就可线下推送，线上自动拉取部署。&lt;/p></description></item></channel></rss>