<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Razeen`s Blog</title><link>https://razeencheng.com/</link><description>Recent content on Razeen`s Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 08 Nov 2022 21:22:48 +0000</lastBuildDate><atom:link href="https://razeencheng.com/index.xml" rel="self" type="application/rss+xml"/><item><title>NAS折腾记(6)：黑群晖系统安装好后怎么洗白？</title><link>https://razeencheng.com/posts/nas-07-syno-hack/</link><pubDate>Tue, 08 Nov 2022 21:22:48 +0000</pubDate><guid>https://razeencheng.com/posts/nas-07-syno-hack/</guid><description>&lt;p>在前面的文章中，我们利用ARPL引导将黑群晖安装好了。有朋友就问我，ARPL安装的黑群晖洗白和其他的不一样了，该怎么洗白？这篇文章为你解答。&lt;/p></description></item><item><title>NAS折腾记(5)：群晖硬盘休眠设置与分析</title><link>https://razeencheng.com/posts/nas-05-hdd-hibernation/</link><pubDate>Fri, 04 Nov 2022 21:22:48 +0000</pubDate><guid>https://razeencheng.com/posts/nas-05-hdd-hibernation/</guid><description>&lt;p>NAS需要硬盘休眠么？群晖怎么才能硬盘休眠？ 这一期我们来聊聊硬盘休眠，同时分享一下我是怎么分析硬盘休眠的日志的，以及设置群晖系统休眠的。&lt;/p>
&lt;p>这期我们从几个问题来入手。&lt;/p></description></item><item><title>NAS折腾记(4)： 20分钟手把手带你完美安装 DS918+ 黑群晖7.1.1</title><link>https://razeencheng.com/posts/nas-04-hack-synology-install/</link><pubDate>Sat, 29 Oct 2022 21:22:48 +0000</pubDate><guid>https://razeencheng.com/posts/nas-04-hack-synology-install/</guid><description>&lt;p>在前面的视频中，NAS 的硬件已经组装好了，就差一个系统了。系统我选择了黑群晖 7.1.1，其系统是众多 NAS 中我比较中意的，简洁，漂亮，操作简单。最喜欢的还是群晖的 Photos 软件，图片同步，浏览，人脸识别，地理位置都很赞。这个视频我就来安装黑群晖 7.1.1 系统，同时配置 M.2 缓存盘等。&lt;/p></description></item><item><title>NAS折腾记(3)：NAS 装机</title><link>https://razeencheng.com/posts/nas-03-assemble/</link><pubDate>Sun, 23 Oct 2022 21:22:48 +0000</pubDate><guid>https://razeencheng.com/posts/nas-03-assemble/</guid><description>&lt;p>在前面的两篇中，分享了4盘位机箱和主板、CPU的开箱，这期视频就来分享一下我的NAS全部配件和组装的过程。&lt;/p></description></item><item><title>NAS折腾记(2)：B360-ITX 双M.2 双2.5G网口 6 SATA主版 开箱</title><link>https://razeencheng.com/posts/nas-02-mainboard/</link><pubDate>Fri, 21 Oct 2022 23:22:48 +0000</pubDate><guid>https://razeencheng.com/posts/nas-02-mainboard/</guid><description>&lt;p>上一篇中，我们开箱了机箱。这一篇，我们来看看主板、CPU、散热器。当时买ITX主板的时候，在畅网的N6005和这款之间犹豫了很久，最后入手了这款 B360的主板。&lt;/p></description></item><item><title>NAS折腾记(1)：328元的4盘位Nas机箱开箱</title><link>https://razeencheng.com/posts/nas-01-unboxing/</link><pubDate>Wed, 19 Oct 2022 07:26:48 +0000</pubDate><guid>https://razeencheng.com/posts/nas-01-unboxing/</guid><description>&lt;p>最近准备把自己的的 Nas 小幅度升级一下，于是入手了这款&lt;a href="https://m.tb.cn/h.UWLQNn9">梵隆的4盘位机箱&lt;/a>，体验下来，整体还不错，用料扎实，空间虽紧凑但也合理，盘位热插拔好评，整体来说 328 元入手性价比可以了。&lt;/p></description></item><item><title>Openwrt + Clash 全局科学上网</title><link>https://razeencheng.com/posts/newifi3-d2-openwrt-clash/</link><pubDate>Thu, 11 Aug 2022 07:02:45 +0000</pubDate><guid>https://razeencheng.com/posts/newifi3-d2-openwrt-clash/</guid><description>&lt;p>最近把 Newifi3 D2 的系统折腾安装上了 OpenWrt, 这篇文章记录我在 OpenWrt 上折腾 Clash 全局科学上网的过程。&lt;/p></description></item><item><title>Newifi3 刷入 OpenWrt 固件 v21.02</title><link>https://razeencheng.com/posts/newifi3-d2-with-openwrt/</link><pubDate>Wed, 03 Aug 2022 13:17:14 +0000</pubDate><guid>https://razeencheng.com/posts/newifi3-d2-with-openwrt/</guid><description>&lt;p>这几天又把我的矿渣 Newifi3 D2 拿出来折腾了一番，把系统由&lt;strong>老毛子固件&lt;/strong>刷成了&lt;strong>OpenWrt&lt;/strong>固件，准备再次折腾一下全局科学上网。&lt;/p></description></item><item><title>利用 Markdown 画一些流程图、时序图、甘特图等</title><link>https://razeencheng.com/posts/makedown-flow-and-mermaid-diagrams/</link><pubDate>Thu, 02 Jun 2022 21:50:01 +0000</pubDate><guid>https://razeencheng.com/posts/makedown-flow-and-mermaid-diagrams/</guid><description>&lt;p>平常用 &lt;code>markdown&lt;/code> 简单写点东西，需要一些流程图，时序图，甘特图, &lt;code>makedown&lt;/code> 支持的不错。 而 &lt;code>hexo&lt;/code> 博客也能很轻松的开启。&lt;/p>
&lt;p>这里记录下，方便查阅使用。&lt;/p></description></item><item><title>Homelib(8): 搭建自用 Gitlab 与 Docker 仓库</title><link>https://razeencheng.com/posts/homelib-008-gitlab-and-registry/</link><pubDate>Sun, 19 Dec 2021 16:16:29 +0800</pubDate><guid>https://razeencheng.com/posts/homelib-008-gitlab-and-registry/</guid><description>&lt;p>为了托管一些私有的代码，折腾 CI/CD，我用 Docker 搭建一套自己的 Gitlab. Gitlab 社区版功能很强大, 包含且不限于 代码托管、容器镜像库，Gitlab Pages 以及 CI/CD。&lt;/p></description></item><item><title>Nginx Tcp 转发保留客户端真实 IP （PROXY Protocol）</title><link>https://razeencheng.com/posts/nginx-tcp-stream-proxy-keep-real-client-ip/</link><pubDate>Sat, 18 Dec 2021 22:13:59 +0800</pubDate><guid>https://razeencheng.com/posts/nginx-tcp-stream-proxy-keep-real-client-ip/</guid><description>&lt;p>由于在家里搭建了博客，Git 等服务， 经过了阿里云用 Nginx 做了 TCP Proxy, 导致了一个问题，家里看到的服务访问 IP 都是转发服务器的 IP，无法看到真实IP。联想到平常 LB 上的是支持 PROXY Protocol 转发真实IP, 于是搜了一下，Nginx 还真支持！&lt;/p></description></item><item><title>Homelib (7)：IPSec VPN（基于证书认证）客户端设置</title><link>https://razeencheng.com/posts/homelib-007-set-ipsec-vpn-client/</link><pubDate>Sun, 12 Sep 2021 02:12:26 +0000</pubDate><guid>https://razeencheng.com/posts/homelib-007-set-ipsec-vpn-client/</guid><description>&lt;p>上一篇文章&lt;a href="https://razeencheng.com/post/homelib-006-build-ipsec-vpn.html">基于自签发证书的 IPSec VPN 搭建&lt;/a>中，我搭建了一个 IPSec VPN, 并且用自签发证书做客户端和服务器的认证。这篇文章我详细的介绍一下我们的手机（iPhone) 、电脑（Mac) 怎么配置。&lt;/p></description></item><item><title>Homelib (6)： 基于自签发证书的 IPSec VPN 搭建</title><link>https://razeencheng.com/posts/homelib-006-build-ipsec-vpn/</link><pubDate>Mon, 30 Aug 2021 01:02:26 +0000</pubDate><guid>https://razeencheng.com/posts/homelib-006-build-ipsec-vpn/</guid><description>&lt;p>为了保证安全的同时，在外网也能便利访问家里的服务，同时又能减少转发带来流量，VPN绝对是最佳的选择。这里我就用&lt;code>StrongSwan &lt;/code>搭建一个基于证书认证的&lt;code>IPSec VPN&lt;/code>。&lt;/p></description></item><item><title>Homelib (5)： DDNS 动态域名解析</title><link>https://razeencheng.com/posts/homelib-005-ddns/</link><pubDate>Thu, 26 Aug 2021 01:30:26 +0000</pubDate><guid>https://razeencheng.com/posts/homelib-005-ddns/</guid><description>&lt;p>由于家庭的电信公网IP是动态的，每次重新拨号后，IP地址都会发生变化，所以为了能够顺利的打从外网访问家里或VPN连接到家里，我们的选择之一就是　DDNS。&lt;/p></description></item><item><title>Homelib (4)： Linux 服务器基础环境准备</title><link>https://razeencheng.com/posts/homelib-004-prepare-the-server-environment/</link><pubDate>Fri, 20 Aug 2021 23:52:26 +0000</pubDate><guid>https://razeencheng.com/posts/homelib-004-prepare-the-server-environment/</guid><description>&lt;p>服务器系统安装的是CentOS7, 这篇文章主要记录一下服务器上系统环境与基础软件的准备工作。&lt;/p></description></item><item><title>Homelib (3)： 整体网络与基础硬件介绍</title><link>https://razeencheng.com/posts/homelib-003-network-topology-and-hardware/</link><pubDate>Sun, 15 Aug 2021 22:52:26 +0000</pubDate><guid>https://razeencheng.com/posts/homelib-003-network-topology-and-hardware/</guid><description>&lt;p>一直心心念念想要组建一个&lt;code>Homelib&lt;/code>, 满足自己想折腾博客、NAS、Gitlab、自动化、虚拟机、IOT、k8s、Linux、写一些小工具等等的乐趣， 经过几年陆陆续续的买入一些硬件终于拼凑出了一个小型的&lt;code>Homelib&lt;/code>。&lt;/p></description></item><item><title>Go学习笔记（十）老项目迁移 go module 大型灾难记录</title><link>https://razeencheng.com/posts/accidents-of-migrating-to-go-modules/</link><pubDate>Tue, 20 Jul 2021 09:30:10 +0000</pubDate><guid>https://razeencheng.com/posts/accidents-of-migrating-to-go-modules/</guid><description>&lt;p>最近在改造一个比较早期的一个项目，其中就涉及到用将原来 &lt;code>Vendor&lt;/code> 管理依赖换成 &lt;code>Go Modules&lt;/code> 来管理。 然而过程真是一波三折，在这里总结一下此次 &lt;code>Go Modules&lt;/code> 改造中遇到的问题，以及解决方法。&lt;/p></description></item><item><title>2021 上海人才引进落户全程记录</title><link>https://razeencheng.com/posts/shanghai-settltment-record/</link><pubDate>Thu, 01 Jul 2021 08:52:00 +0000</pubDate><guid>https://razeencheng.com/posts/shanghai-settltment-record/</guid><description>&lt;p>来上海五年多了，终于落户了。后面小孩子上学相对要简单一些了，身为老父亲的我稍稍松了口气。&lt;/p>
&lt;p>今年上海落户政策放松了不少，趁着这波机会，我司帮忙提出了落户申请。 从公司提出申请到拿到户口卡，整个过程持续约3个月。&lt;/p>
&lt;p>这篇博客记录一下整个人才引进落户的过程，供各位童鞋参考。&lt;/p></description></item><item><title>Github Actions 初体验之自动化部署 Hexo 博客</title><link>https://razeencheng.com/posts/use-github-action-to-deploy-your-hexo-blog/</link><pubDate>Sat, 26 Jun 2021 03:43:33 +0000</pubDate><guid>https://razeencheng.com/posts/use-github-action-to-deploy-your-hexo-blog/</guid><description>&lt;p>觊觎了 Github Actions 很久了，昨天尝试将自己的博客用它来部署，总体下来感觉不错。&lt;/p>
&lt;p>Github Actions 是 Github 推出的自动化工作流， 就像 Gitlab 的 CI/CD, Travis CI 一样，能帮我们完成一些 CI/CD 的工作流，实现自动化构建、测试、打包、部署等等。&lt;/p>
&lt;p>这篇文章主要实现 只需要将文章推送到 Github ，Github Actions 自动完成构建静态文件，以及更新 Github Pages 仓库的流程。&lt;/p></description></item><item><title>记录学位证、毕业证补办过程</title><link>https://razeencheng.com/posts/fill-do-degree-graduation-certificate/</link><pubDate>Wed, 21 Apr 2021 09:17:08 +0000</pubDate><guid>https://razeencheng.com/posts/fill-do-degree-graduation-certificate/</guid><description>&lt;p>毕业证、学位证对于我们真是太重要了，一般人也不会丢。但，如果你像我一样真的丢了，怎么办？&lt;/p>
&lt;p>（PS：从来都没丢过重要东西，头次直接把两个证一起丢了！！）&lt;/p></description></item><item><title>宝宝入幼儿园全程记录（2021年上海托幼入园政策解读）</title><link>https://razeencheng.com/posts/shanghai-kindergarten-policy-2021/</link><pubDate>Mon, 19 Apr 2021 23:23:52 +0000</pubDate><guid>https://razeencheng.com/posts/shanghai-kindergarten-policy-2021/</guid><description>&lt;p>一转眼宝宝都3岁多了，9月份就要进入幼儿园了，在这里记录一下托班进入幼儿园的全过程。其中包括了今年的相关政策解读，与实际操作记录。&lt;/p></description></item><item><title>记一次 Nginx DNS 缓存导致转发问题</title><link>https://razeencheng.com/posts/nginx-proxy-problem-with-dns-cache/</link><pubDate>Sat, 06 Mar 2021 07:01:51 +0000</pubDate><guid>https://razeencheng.com/posts/nginx-proxy-problem-with-dns-cache/</guid><description>&lt;p>在家里搭建了一个 GitLab 服务器，由于电信家庭宽带的公网 IP 是不固定的，且&lt;code>443&lt;/code>端口是被封的，所以买了阿里云作为中转，利用 Ngnix 作 TCP Proxy 结合 DDNS ，这样就能正常上自己的 Git 了。但今天，我发现推代码怎么也推不上去，校对了密钥，服务器状态都没问题。最后上阿里云，重启了下 Nginx，发现可以了。 找了一圈原因，最后发现是 Nginx 转发缓存 DNS 解析导致的，下面我们就复现一下问题并找找为什么，以及解决方式。&lt;/p></description></item><item><title>Homelib (2)： 电信悦me网关修改桥接模式，路由器拨号</title><link>https://razeencheng.com/posts/homelib-002-yue-me-bridge/</link><pubDate>Thu, 18 Feb 2021 22:52:26 +0000</pubDate><guid>https://razeencheng.com/posts/homelib-002-yue-me-bridge/</guid><description>&lt;p>由于要做端口转发，每次要到悦me的网关上操作，但电信这网关操作起来体验不是很好，比较卡。于是昨天改成了桥接模式，然后利用路由器拨号。这样每次只要在路由器上操作，方便多了。&lt;/p></description></item><item><title>Homelib (1)：5分钟上手黑群晖 NAS</title><link>https://razeencheng.com/posts/homelib-001-synology-hackintosh/</link><pubDate>Thu, 11 Feb 2021 01:18:03 +0000</pubDate><guid>https://razeencheng.com/posts/homelib-001-synology-hackintosh/</guid><description>&lt;p>今天在家把黑群晖折腾好了，分享一下折腾黑群晖(DS918+)的过程，整个安装过程加起来不到5分钟哦。&lt;/p></description></item><item><title>终极 Bash 脚本指南</title><link>https://razeencheng.com/posts/the-ultimate-programmers-guide-to-bash-scripting/</link><pubDate>Mon, 01 Feb 2021 19:46:58 +0000</pubDate><guid>https://razeencheng.com/posts/the-ultimate-programmers-guide-to-bash-scripting/</guid><description>&lt;p>在开发的过程中，经常需要处理一些重复的工作，或者逻辑相当简单但耗时的功能，这时我们可能会考虑到用脚本来自动化完成这些工作。而 Bash 脚本是我们最容易接触到和上手的脚本语言。&lt;/p>
&lt;p>这篇博客汇总一些常用的 Bash 语法，方便日后查阅学习。&lt;/p></description></item><item><title>Typora 自动上传图片到七牛云</title><link>https://razeencheng.com/posts/typora-upload-image-qiniu/</link><pubDate>Sun, 31 Jan 2021 00:18:10 +0000</pubDate><guid>https://razeencheng.com/posts/typora-upload-image-qiniu/</guid><description>&lt;p>用 Markdown 写博客配图片一直是个烦恼我的为问题， 每次上传图片都比较麻烦，或是中断思路，或是最后集中处理耗费时间。今天无意中，发现了 Typora 的图片自动上传功能，配合一段脚本，将插入的图片自动上传七牛，让写文章更爽了。&lt;/p></description></item><item><title>Ubuntu 20.04 LTS 有线网卡驱动安装</title><link>https://razeencheng.com/posts/ubutun-realtek-r8125-driver-install/</link><pubDate>Wed, 20 Jan 2021 01:30:08 +0000</pubDate><guid>https://razeencheng.com/posts/ubutun-realtek-r8125-driver-install/</guid><description>&lt;p>Ubuntu 20.04 LTS 安装好后，发现 WIFI 可以正常连接，有线网络连图标都没有显示。经过诊断发现是有线网卡驱动未正确问题。最后通过手动安装网卡驱动得以解决。这里记录一下。&lt;/p>
&lt;p>我的主板是 &lt;code>微星B460M MORTAR WIFI &lt;/code>，驱动 &lt;code> R8125&lt;/code>。类似型号安装应也差不多。&lt;/p></description></item><item><title>折腾 Ubuntu 20.04 LTS 开发环境</title><link>https://razeencheng.com/posts/start-use-ubuntu-and-win/</link><pubDate>Fri, 28 Aug 2020 02:48:08 +0000</pubDate><guid>https://razeencheng.com/posts/start-use-ubuntu-and-win/</guid><description>&lt;p>&lt;del>前段时间买了个 Inter NUC (NUC10i5FNH6), 主要用来在家里搬砖。体验了一段时间 win10, 虽然配置了 WSL2， 但开发体验实在糟糕，在考虑过 Ubuntu 和黑苹果后，还是选择了 Ubuntu, 毕竟用习惯了白苹果，突然用个黑苹果，不能随意升级，还有接一个 USB WiFi ，还担心驱动问题。。。&lt;/del>&lt;/p>
&lt;blockquote>
&lt;p>NUC 用了一段时间，还是有点卡，CPU跟不上。 最后还是组装了一台台式主机，将原来的系统盘查上去直接就可使用，爽到飞起。 至于NUC就当服务器用了。&lt;/p>
&lt;/blockquote>
&lt;p>毕竟头一次想把 Ubuntu 当作生产力，记录一下折腾过程。&lt;/p></description></item><item><title>Go学习笔记（九） 计时器的生命周期[译]</title><link>https://razeencheng.com/posts/go-timers-life-cycle/</link><pubDate>Sat, 15 Aug 2020 07:41:00 +0000</pubDate><guid>https://razeencheng.com/posts/go-timers-life-cycle/</guid><description>&lt;p>&lt;img src="https://s.razeen.cn/images/2020/go-timer.png" alt="Illustration created for “A Journey With Go”, made from the original Go Gopher, created by Renee French.">&lt;/p>
&lt;p>&lt;em>全文基于GO 1.14&lt;/em>&lt;/p>
&lt;p>计时器在定时执行一些任务时很有用。Go内部依靠调度器来管理创建的计时器。而Go的调度程序是协作式的调度方式，这会让整个调度看起来比较复杂，因为goroutune必须自己停止（依赖channel阻塞或system call), 或者由调度器自己在某个调度点暂停。&lt;/p></description></item><item><title>利用 git hook 规范你的代码与 commit message</title><link>https://razeencheng.com/posts/golang-and-git-commit-message-pre-commit/</link><pubDate>Mon, 13 Apr 2020 07:08:37 +0000</pubDate><guid>https://razeencheng.com/posts/golang-and-git-commit-message-pre-commit/</guid><description>&lt;p>在团队协作时，由于个人编码习惯的差异，导致代码格式，风格都会有所不同，这就给代码审核带来一定的困难，更严重的是会导致整体的代码质量不可控。这时，我们有必要借助一些工具来约束我们的代码格式。在Go中，我们经常使用的工具有：&lt;/p>
&lt;ul>
&lt;li>&lt;code>goimports&lt;/code>: 自动导包；&lt;/li>
&lt;li>&lt;code>gofmt&lt;/code> : 格式化我们的代码；&lt;/li>
&lt;li>&lt;code>golint&lt;/code>: 检查代码命名，注释等；&lt;/li>
&lt;li>&lt;code>go vet&lt;/code>: 静态错误检查。&lt;/li>
&lt;/ul>
&lt;p>那么，我们可以利用这些工具来规范团队的代码风格。但如果每次手动执行这些命令，或者仅仅依靠IDE去检查，这是不靠谱的，因为人的行为本身是不靠谱的==。&lt;/p>
&lt;p>于是，我们可以结合&lt;code>git hook&lt;/code>, 强制执行这些检查，检查不通过，代码都无法提交，从而达到强一致性。&lt;/p>
&lt;p>同时，结合上一篇&lt;a href="https://razeencheng.com/post/conventional-commits-and-standard-version.html">&amp;laquo;规范git commit message与自动化版本控制&amp;raquo;&lt;/a>, 这里我们介绍一下利用pre-commit 约束commit-msg来约束我们的代码与git commit message。&lt;/p></description></item></channel></rss>